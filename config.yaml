# config for analysis

# conda environment file
environment: environment.yml

# most CPUs to ever use at once
max_cpus: 16

# amplicons sequenced by PacBio
amplicons: data/PacBio_amplicons.gb

# the primary target for which we are calling mutations
primary_target: B.1.351

# how to parse the amplicon
feature_parse_specs: data/feature_parse_specs.yaml

# do we get the sequencing data from the 'HutchServer' or 'SRA'?
seqdata_source: HutchServer

# list of PacBio sequencing runs linking barcodes to variants
pacbio_runs: data/PacBio_runs.csv

# list of Illumina sequencing runs of barcodes
barcode_runs: data/barcode_runs.csv

# sequencing counts to cells ratio should exceed this for escape samples
min_counts_to_cells_ratio: 2.5
# sequencing counts should exceed this for reference samples
reference_min_counts: 2.5e+7

# wildtype sequence of mutagenized gene
wildtype_sequence: data/wildtype_sequence.fasta
site_number_offset: 330  # add this to sequential sites to get RBD numbering

# URLs from which we download binding & expression of mutants & variants
# for the original DMS of SARS-CoV-2 Wuhan-1 RBD
mut_bind_expr_url: https://media.githubusercontent.com/media/jbloomlab/SARS-CoV-2-RBD_DMS/master/results/single_mut_effects/single_mut_effects.csv

# parameters for running PacBio `ccs` program
min_ccs_accuracy: 0.999
min_ccs_passes: 3
min_ccs_length: 50
max_ccs_length: 5000

# max error rate in gene / barcode CCSs retained for consensu building
max_error_rate: 0.0001

# Parameters for processing Illumina barcodes, assuming this structure:
#  [R2 binds] - [upstream] - [barcode] - [downstream] - [R1 binds]
#  This orientation is hard-wired in the barcode parser, but here it is opposite
#  Therefore, supplied the "downstream" sequence as reverse complemented upstream
# Passed to `dms_variants.illuminabarcodeparser.IlluminaBarcodeParser`:
illumina_barcode_parser_params:
  upstream: GCTCGCGGCCGC
  downstream: ''
  minq: 20
  upstream_mismatch: 1
  downstream_mismatch: 0

# Input files for analyses from the data subdirectory
RBD_sites: data/RBD_sites.csv

# Parameters used when computed escape scores:
escape_score_type: frac_escape  # type of escape score, see dms_variants
escape_score_pseudocount: 0.5  # added to observed counts
escape_score_floor_E: 0  # floor on escape fractions
escape_score_ceil_E: 1  # ceiling on escape fractions
# Group variants by this when calculating escape scores; sensible values are
# "barcode" (to calculate a score for each barcoded variant) or
# "aa_substitutions" (to group all variants with same amino-acid substitutions):
escape_score_group_by: barcode
# Filter variants (after grouping according to `escape_group_by`) with
# pre-selection counts < this quantile of stop codon variants, thereby
# removing low count "noise":
escape_score_stop_quantile_filter: 0.9
# Which model to use for setting expression filter:
expression_epistasistype: no epistasis
expression_likelihoodtype: Gaussian
# Filter variants with expression < this threshold
# I have arbitrarily set this threshold for now
escape_score_min_expr_variant: -2.5
# **Prior to fitting global epistasis models**, remove variants that have
# substitutions that are not observed in at least this many variants in a
# single-mutant **and / or** any context:
global_epistasis_filter_by_subs_observed_single: 0
global_epistasis_filter_by_subs_observed_any: 2
global_epistasis_filter_by_subs_observed_and_or: or
# Only retain mutation-level escape fraction estimates when there are
# **either** >= the indicated number of filtered variants (after grouping
# according to `escape_group_by`) with the mutation as a single mutant
# or in any context for that library:
escape_frac_min_single_mut_measurements: 1
escape_frac_min_any_mut_measurements: 2
# In order to compute an "average" escape fraction for a mutation, require
# it to be in at least this many libraries **or** to be observed at
# least this many total times as a single mutant across all libraries:
escape_frac_avg_min_libraries: 2
escape_frac_avg_min_single: 2

# Parameters in escape frac output file that enable dms-view
# visualization on PDB 6m0j:
escape_frac_protein_chain: E  # use this chain

# output directories / files
summary_dir: results/summary
figs_dir: results/figures
mut_bind_expr: results/prior_DMS_data/mutant_ACE2binding_expression.csv
ccs_dir: results/ccs
process_ccs_dir: results/process_ccs
processed_ccs_file: results/process_ccs/processed_ccs.csv
variants_dir: results/variants
nt_variant_table_file: results/variants/nucleotide_variant_table.csv
codon_variant_table: results/variants/codon_variant_table.csv
counts_dir: results/counts
variant_counts: results/counts/variant_counts.csv.gz
counts_to_cells_csv: results/counts/counts_to_cells_csv.csv
expression_sortseq_dir: results/expression_meanFs
expression_sortseq_file: results/expression_meanFs/expression_meanFs.csv
global_epistasis_expr_dir: results/global_epistasis_expression
global_epistasis_expr_file: results/global_epistasis_expression/global_epistasis_expression_predictions.csv
expression_predictions_by_aa_substitutions_file: results/global_epistasis_expression/expression_predictions_by_aa_substitutions.csv
expression_predictions_by_barcode_file: results/global_epistasis_expression/expression_predictions_by_barcode.csv
single_mut_effects_dir: results/single_mut_effects
single_mut_effects_file: results/single_mut_effects/single_mut_effects.csv
escape_scores_dir: results/escape_scores
escape_score_samples: results/escape_scores/samples.csv
escape_scores: results/escape_scores/scores.csv
escape_fracs: results/escape_scores/escape_fracs.csv
